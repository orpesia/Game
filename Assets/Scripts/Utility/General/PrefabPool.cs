//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

namespace Unnamed
{
	public class PrefabPool
	{
		public delegate void Delegate( GameObject obj);

		private GameObject m_target = null;
		private Delegate m_createDelegate = null;
		private Delegate m_requestDelegate = null;
		private Delegate m_returnDelegate = null;

		private Queue<GameObject> m_pool = new Queue<GameObject>();

		public PrefabPool ( GameObject target, Delegate createDelegate, Delegate requestDelegate, Delegate returnDelegate )
		{
			m_target = target;
			m_createDelegate = createDelegate;
			m_requestDelegate = requestDelegate;
			m_returnDelegate = returnDelegate;
		}

		public GameObject Request()
		{
			if( m_pool.Count <= 0 )
			{
				GameObject obj = GameObject.Instantiate( m_target ) as GameObject;
				m_pool.Enqueue( obj );

				if( null != m_createDelegate )
				{
					m_createDelegate( obj );
				}

				return this.Request ();
			}

			GameObject allocObject = m_pool.Dequeue();
			allocObject.SetActive( true );

			if( null != m_requestDelegate )
			{
				m_requestDelegate( allocObject );
			}

			return allocObject;
		}

		public void Return( GameObject obj )
		{
			if( null != m_returnDelegate )
			{
				m_returnDelegate( obj );
			}

			obj.SetActive( false );
			m_pool.Enqueue( obj );
		}

	}
}

