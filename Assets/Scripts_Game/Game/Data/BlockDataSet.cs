//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18408
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;

using UnityEngine;

using Unnamed;
using Game;

namespace Game.Data
{
	public class BlockDataSet : MonoBehaviour
	{
		[System.Serializable]
		public class KeyValue
		{
			public BlockCode code;
			public string name;
			
			public KeyValue(BlockCode code, string name)
			{
				this.code = code;
				this.name = name;
			}
		};

		[SerializeField][HideInInspector]
		public TextureAtlas Atlas = null;

		[SerializeField]
		public List<KeyValue> Data = new List<KeyValue>();

		public Dictionary<BlockCode,string> Tree = new Dictionary<BlockCode, string>();

		
		public BlockDataSet ()
		{
		}
		
		void Awake()
		{
			this.SearchMode();
		}


		public void SearchMode()
		{
			foreach(KeyValue v in Data)
			{
				Tree.Add(v.code, v.name);
			}
			
			Data.Clear ();
		}
		
		public void DataMode()
		{
			foreach(KeyValuePair<BlockCode,string> v in Tree)
			{
				Data.Add(new KeyValue(v.Key,v.Value));
			}
			
			Tree.Clear ();
		}

		public KeyValue FindDataByCode(BlockCode code)
		{
			if( Data.Count <= 0 )
			{
				return null;
			}
			
			foreach( BlockDataSet.KeyValue kv in Data )
			{
				if( kv.code == code )
				{
					return kv;
				}
			}
			
			return null;
		}

		public TextureAtlas.Atlas FindSpriteByCode(BlockCode code)
		{
			KeyValue keyValue = this.FindDataByCode(code);
			if( null == keyValue )
			{
				return null;
			}

			return Atlas.GetSpriteByName( keyValue.name );
		}

	}
}

